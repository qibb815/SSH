<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context-4.0.xsd
        http://www.springframework.org/schema/mvc 
        http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop-4.0.xsd">

	<!-- 配置自动扫描的包 -->
	<context:component-scan base-package="com.springmvc.*" />

	<mvc:annotation-driven />
	
	<!-- 配置视图解析器 如何把handler 方法返回值解析为实际的物理视图 -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/views/"></property>
		<property name="suffix" value=".jsp"></property>
	</bean>
	
	<!-- <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">  
        <property name="messageConverters">  
        	<list>  
               json转换器  
                <bean class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter" />  
            </list>  
        </property>  
    </bean>  --> 
    
    <!-- c3p0数据源 -->  
    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">  
        <!-- 驱动程序 -->  
        <property name="driverClassName">  
            <value>com.mysql.jdbc.Driver</value>  
        </property>  
  
        <!-- 连接的url地址 -->  
        <property name="url">  
            <value>jdbc:mysql://localhost:3306/test?useUnicode=true&amp;characterEncoding=UTF8</value>  
        </property>  
  
        <!-- 连接的用户名 -->  
        <property name="username">  
            <value>root</value>  
        </property>  
  
        <!-- 连接的密码 -->  
        <property name="password">  
            <value>root</value>  
        </property>  
 
    </bean> 
    
   <bean id="sessionFactory"  
        class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">  
        <!-- 设置数据源 -->  
        <property name="dataSource" ref="dataSource" />  
        <!-- 属性设置 -->  
        <property name="hibernateProperties">  
            <props>  
            	<prop key="hibernate.connection.username">root</prop>
            	<prop key="hibernate.connection.password">root</prop>
                <prop key="hibernate.show_sql">true</prop>  
                <prop key="hibernate.hbm2ddl.auto">update</prop> 
                <prop key="hibernate.format_sql">true</prop>
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect</prop>
                <prop key="current_session_context_class">thread</prop>
		        <prop key="hibernate.cache.use_second_level_cache">true</prop>  
		        <prop key="hibernate.cache.region.factory_class">org.hibernate.cache.ehcache.EhCacheRegionFactory</prop>  
		        <!-- 开启查询缓存 -->  
		        <prop key="hibernate.cache.use_query_cache">true</prop>  
            </props>  
        </property>  
        <!-- 映射文件配置 -->  
        <property name="annotatedClasses">  
            <list>  
                <value>com.springmvc.model.User</value>
                <value>com.springmvc.model.Role</value>
            </list>  
        </property>  
    </bean>  
	
	<bean id="hibernateTemplate" class="org.springframework.orm.hibernate5.HibernateTemplate">  
        <property name="sessionFactory" ref="sessionFactory" />  
    </bean>
    
    <bean id="myOpenSessionInViewFilter" class="com.springmvc.test.MyOpenSessionInViewFilter"></bean>
    
</beans>